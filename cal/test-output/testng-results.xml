<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="9" ignored="0" total="58" passed="49">
  <reporter-output>
  </reporter-output>
  <suite name="Demo Suite" duration-ms="147" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
    <groups>
    </groups>
    <test name="Sub Cal Test" duration-ms="47" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.SubtractionCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="twoMinusOne()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="twoMinusOne" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoMinusOne -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@f7aae2]" name="minusTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
      </class> <!-- com.epam.cdp.cal.tests.SubtractionCalculatorTest -->
    </test> <!-- Sub Cal Test -->
    <test name="Sum Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.SumCalculatorTest">
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@cddf8f]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="valuesForSunTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
      </class> <!-- com.epam.cdp.cal.tests.SumCalculatorTest -->
    </test> <!-- Sum Cal Test -->
    <test name="Cosine Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.CosineCalculatorTest">
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="cosTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCosTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.98]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [0.1411200080598672] but found [-0.98]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [0.1411200080598672] but found [-0.98]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="cosTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCosTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.275]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [-0.9613974918795568] but found [-0.275]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [-0.9613974918795568] but found [-0.275]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="cosTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCosTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.42]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [-0.9055783620066238] but found [0.42]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [-0.9055783620066238] but found [0.42]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="cosTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCosTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.54]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [0.8414709848078965] but found [0.54]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [0.8414709848078965] but found [0.54]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@80cdac]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.cdp.cal.tests.CosineCalculatorTest -->
    </test> <!-- Cosine Cal Test -->
    <test name="Cotangent Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.CotangentCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="ctgTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCtgTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.642]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [-0.7615941559557649] but found [-0.642]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [-0.7615941559557649] but found [-0.642]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.ctgTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="ctgTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCtgTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.14]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.9999983369439447] but found [1.14]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.9999983369439447] but found [1.14]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.ctgTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="ctgTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCtgTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.0] but found [Infinity]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.0] but found [Infinity]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.ctgTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
        <test-method status="FAIL" signature="ctgTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1baa894]" name="ctgTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForCtgTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.642]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.7615941559557649] but found [0.642]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.7615941559557649] but found [0.642]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.ctgTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgTest -->
      </class> <!-- com.epam.cdp.cal.tests.CotangentCalculatorTest -->
    </test> <!-- Cotangent Cal Test -->
    <test name="Division Cal Test" duration-ms="16" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.DivisionCalculatorTest">
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDoubleDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDoubleDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divExceptionTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divExceptionTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForExceptionDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.cdp.cal.tests.DivisionCalculatorTest.divExceptionTest(DivisionCalculatorTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDoubleDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDoubleDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDoubleDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="divTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForDivTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@273305]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.cdp.cal.tests.DivisionCalculatorTest -->
    </test> <!-- Division Cal Test -->
    <test name="Multiplication Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.MultiplicationCalculatorTest">
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="multTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="multTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForMultTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@10421f5]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.epam.cdp.cal.tests.MultiplicationCalculatorTest -->
    </test> <!-- Multiplication Cal Test -->
    <test name="Power Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.PowCalculatorTest">
        <test-method status="PASS" signature="powTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="powTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForPowTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.841]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="powTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="powTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForPowTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="powTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="powTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForPowTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowCalculatorTest@16d8735]" name="powTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForPowTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
      </class> <!-- com.epam.cdp.cal.tests.PowCalculatorTest -->
    </test> <!-- Power Cal Test -->
    <test name="Sinus Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.SinusCalculatorTest">
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSinTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSinTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSinTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@1117f44]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSinTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
      </class> <!-- com.epam.cdp.cal.tests.SinusCalculatorTest -->
    </test> <!-- Sinus Cal Test -->
    <test name="Square root Cal Test" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
      <class name="com.epam.cdp.cal.tests.SquareRootCalculatorTest">
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSqrtTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="FAIL" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSqrtTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at com.epam.cdp.cal.tests.SquareRootCalculatorTest.sinTest(SquareRootCalculatorTest.java:13)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.epam.cdp.cal.Runner.main(Runner.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSqrtTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
        <test-method status="PASS" signature="sinTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1e94b0f]" name="sinTest" duration-ms="0" started-at="2019-05-27T12:38:58Z" data-provider="dataForSqrtTest" finished-at="2019-05-27T12:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinTest -->
      </class> <!-- com.epam.cdp.cal.tests.SquareRootCalculatorTest -->
    </test> <!-- Square root Cal Test -->
  </suite> <!-- Demo Suite -->
  <suite name="Default Suite" duration-ms="0" started-at="2019-05-27T12:38:58Z" finished-at="2019-05-27T12:38:58Z">
    <groups>
    </groups>
  </suite> <!-- Default Suite -->
</testng-results>
