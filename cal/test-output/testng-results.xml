<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="12" ignored="0" total="56" passed="44">
  <reporter-output>
  </reporter-output>
  <suite name="Demo Suite" duration-ms="2230" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:47Z">
    <groups>
      <group name="trigonometry">
        <method signature="SumCalculatorTest.onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" class="com.epam.cdp.cal.tests.SumCalculatorTest"/>
        <method signature="CosineCalculatorTest.cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="cosTest" class="com.epam.cdp.cal.tests.CosineCalculatorTest"/>
        <method signature="CotangentCalculatorTest.cotangentTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="cotangentTest" class="com.epam.cdp.cal.tests.CotangentCalculatorTest"/>
        <method signature="SinusCalculatorTest.sinusTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="sinusTest" class="com.epam.cdp.cal.tests.SinusCalculatorTest"/>
      </group> <!-- trigonometry -->
    </groups>
    <test name="Sub Cal Test" duration-ms="36" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
      <class name="com.epam.cdp.cal.tests.SubtractionCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="setUp" is-config="true" duration-ms="13" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="twoMinusOne()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="twoMinusOne" duration-ms="5" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoMinusOne -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="5" started-at="2019-05-28T10:34:45Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="5" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
        <test-method status="PASS" signature="minusTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SubtractionCalculatorTest@1e1023e]" name="minusTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForDoubleSubTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minusTest -->
      </class> <!-- com.epam.cdp.cal.tests.SubtractionCalculatorTest -->
    </test> <!-- Sub Cal Test -->
    <test name="Sum Cal Test" duration-ms="2064" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.SumCalculatorTest">
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="5" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="514" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="setUpGroups()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="setUpGroups" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:45Z" finished-at="2019-05-28T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpGroups -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="0" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="510" started-at="2019-05-28T10:34:45Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="525" started-at="2019-05-28T10:34:46Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="onePlusTwoTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="onePlusTwoTest" duration-ms="515" started-at="2019-05-28T10:34:46Z" data-provider="valuesForSunTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onePlusTwoTest -->
        <test-method status="PASS" signature="tearDownGroup()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="tearDownGroup" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownGroup -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SumCalculatorTest@1444d75]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.cdp.cal.tests.SumCalculatorTest -->
    </test> <!-- Sum Cal Test -->
    <test name="Cosine Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.CosineCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="cosTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCosTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.54]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [0.8414709848078965] but found [0.54]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [0.8414709848078965] but found [0.54]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="cosTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCosTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.98]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [0.1411200080598672] but found [-0.98]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [0.1411200080598672] but found [-0.98]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="cosTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCosTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.275]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [-0.9613974918795568] but found [-0.275]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [-0.9613974918795568] but found [-0.275]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="setUpGroups()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="setUpGroups" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpGroups -->
        <test-method status="FAIL" signature="cosTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="cosTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCosTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.42]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cosine expected [-0.9055783620066238] but found [0.42]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cosine expected [-0.9055783620066238] but found [0.42]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CosineCalculatorTest.cosTest(CosineCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="tearDownGroup()[pri:0, instance:com.epam.cdp.cal.tests.CosineCalculatorTest@1e579dc]" name="tearDownGroup" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownGroup -->
      </class> <!-- com.epam.cdp.cal.tests.CosineCalculatorTest -->
    </test> <!-- Cosine Cal Test -->
    <test name="Cotangent Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.CotangentCalculatorTest">
        <test-method status="FAIL" signature="cotangentTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="cotangentTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCotangentTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.14]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.9999983369439447] but found [1.14]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.9999983369439447] but found [1.14]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.cotangentTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cotangentTest -->
        <test-method status="PASS" signature="tearDownGroup()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="tearDownGroup" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownGroup -->
        <test-method status="FAIL" signature="cotangentTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="cotangentTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCotangentTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.0] but found [Infinity]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.0] but found [Infinity]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.cotangentTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cotangentTest -->
        <test-method status="FAIL" signature="cotangentTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="cotangentTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCotangentTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.642]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [-0.7615941559557649] but found [-0.642]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [-0.7615941559557649] but found [-0.642]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.cotangentTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cotangentTest -->
        <test-method status="PASS" signature="setUpGroups()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="setUpGroups" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpGroups -->
        <test-method status="FAIL" signature="cotangentTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="cotangentTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForCotangentTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.642]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of cotangent expected [0.7615941559557649] but found [0.642]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of cotangent expected [0.7615941559557649] but found [0.642]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.CotangentCalculatorTest.cotangentTest(CotangentCalculatorTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cotangentTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.CotangentCalculatorTest@1479e3f]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.epam.cdp.cal.tests.CotangentCalculatorTest -->
    </test> <!-- Cotangent Cal Test -->
    <test name="Division Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.DivisionCalculatorTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="divTest(long, long, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.cdp.cal.tests.DivisionCalculatorTest.divTest(DivisionCalculatorTest.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="FAIL" signature="divTest(long, long, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.cdp.cal.tests.DivisionCalculatorTest.divTest(DivisionCalculatorTest.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
        <test-method status="PASS" signature="divExceptionTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divExceptionTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForExceptionDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at com.epam.cdp.cal.tests.DivisionCalculatorTest.divExceptionTest(DivisionCalculatorTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divExceptionTest -->
        <test-method status="PASS" signature="divTest(long, long, double)[pri:0, instance:com.epam.cdp.cal.tests.DivisionCalculatorTest@42bbf4]" name="divTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleDivisionTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divTest -->
      </class> <!-- com.epam.cdp.cal.tests.DivisionCalculatorTest -->
    </test> <!-- Division Cal Test -->
    <test name="Multiplication Cal Test" duration-ms="2" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.MultiplicationCalculatorTest">
        <test-method status="PASS" signature="multiplicationTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="2" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="multiplicationTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multiplicationTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="multiplicationTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="FAIL" signature="multiplicationTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForDoubleMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15.05]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of multiplication expected [15.05] but found [15.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of multiplication expected [15.05] but found [15.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.cdp.cal.tests.MultiplicationCalculatorTest.multiplicationTest(MultiplicationCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="multiplicationTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="multiplicationTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="multiplicationTest(long, long, long)[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="multiplicationTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForMultiplicationTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.MultiplicationCalculatorTest@ceb1a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.cdp.cal.tests.MultiplicationCalculatorTest -->
    </test> <!-- Multiplication Cal Test -->
    <test name="Power Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.PowerCalculatorTest">
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="powTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForPowTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="powTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForPowTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="powTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForPowTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="powTest(double, double, double)[pri:0, instance:com.epam.cdp.cal.tests.PowerCalculatorTest@179caec]" name="powTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForPowTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[13.92]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of sinus expected [4.0] but found [13.92]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of sinus expected [4.0] but found [13.92]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEquals(Assert.java:489)
at com.epam.cdp.cal.tests.PowerCalculatorTest.powTest(PowerCalculatorTest.java:12)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
      </class> <!-- com.epam.cdp.cal.tests.PowerCalculatorTest -->
    </test> <!-- Power Cal Test -->
    <test name="Sinus Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.SinusCalculatorTest">
        <test-method status="PASS" signature="sinusTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="sinusTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSinusTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinusTest -->
        <test-method status="PASS" signature="sinusTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="sinusTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSinusTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinusTest -->
        <test-method status="PASS" signature="sinusTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="sinusTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSinusTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinusTest -->
        <test-method status="PASS" signature="tearDownGroup()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="tearDownGroup" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownGroup -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="sinusTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="sinusTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSinusTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.84]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinusTest -->
        <test-method status="PASS" signature="setUpGroups()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="setUpGroups" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpGroups -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SinusCalculatorTest@369c4]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.epam.cdp.cal.tests.SinusCalculatorTest -->
    </test> <!-- Sinus Cal Test -->
    <test name="Square root Cal Test" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
      <class name="com.epam.cdp.cal.tests.SquareRootCalculatorTest">
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="sqrtTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSqrtTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="sqrtTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSqrtTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="setUp" is-config="true" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="sqrtTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSqrtTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.cdp.cal.tests.SquareRootCalculatorTest@1d384ee]" name="sqrtTest" duration-ms="0" started-at="2019-05-28T10:34:47Z" data-provider="dataForSqrtTest" finished-at="2019-05-28T10:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
      </class> <!-- com.epam.cdp.cal.tests.SquareRootCalculatorTest -->
    </test> <!-- Square root Cal Test -->
  </suite> <!-- Demo Suite -->
  <suite name="Default Suite" duration-ms="0" started-at="2019-05-28T10:34:47Z" finished-at="2019-05-28T10:34:47Z">
    <groups>
    </groups>
  </suite> <!-- Default Suite -->
</testng-results>
